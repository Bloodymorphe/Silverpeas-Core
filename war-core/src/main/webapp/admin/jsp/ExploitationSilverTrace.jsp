<%
response.setHeader("Cache-Control","no-store"); //HTTP 1.1
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires",-1); //prevents caching at the proxy server
%>
<%@ page import="java.util.*"%>
<%@ page import="com.stratelia.webactiv.beans.admin.AdminController"%>
<%@ page import="com.stratelia.webactiv.beans.admin.UserLog"%>
<%@ page import="com.stratelia.webactiv.beans.admin.OrganizationController"%>
<%@ page import="com.stratelia.webactiv.beans.admin.UserDetail"%>

<%@ page import="com.stratelia.silverpeas.peasCore.MainSessionController"%>
<%@ page import="com.stratelia.silverpeas.silvertrace.*"%>
<%@ page import="com.stratelia.webactiv.util.ResourceLocator"%>

<%!
private AdminController m_AdminCtrl = null;
private static java.text.SimpleDateFormat m_Formatter = new java.text.SimpleDateFormat("dd/MM/yyyy HH:mm:ss:S");

String addAppenderInList(String module, int appType, int currentType)
{
	Properties	appProps;
	String		valret = "";
	String		selectedString = "";

	appProps = SilverTrace.getAppender(module,appType);
	if (appProps != null)
	{
		if (currentType == appType)
			selectedString = " selected";
		valret = "<option value=" + Integer.toString(appType) + selectedString + ">" + appProps.getProperty("Name") + "</option>";
	}
	return valret;
}
%>

<%
MainSessionController 	m_MainSessionCtrl 	= (MainSessionController) session.getAttribute("SilverSessionController");
if (m_MainSessionCtrl == null || !"A".equals(m_MainSessionCtrl.getUserAccessLevel()))
{
%>
	<script> 
		top.location="../../Login.jsp";
	</script>
<%
}


String m_sContext = "";
String m_sAction = "";
String sURI = request.getRequestURI();
String sServletPath = request.getServletPath();
String sPathInfo = request.getPathInfo();
String sCurrentModule = "root";

int appenderSelected = 0;
int appenderType = SilverTrace.APPENDER_CONSOLE;
String appenderLayout = SilverTrace.LAYOUT_DETAILED;
String appenderFile = "";
boolean appenderFileAppend = true;
String appenderRollingType = "";
String appenderConsole = "";
String appenderMailHost = "";
String appenderMailFrom = "";
String appenderMailTo = "";
String appenderMailSubject = "";

boolean haveToSetAppenderValues = true;

if(sPathInfo != null)
    sURI = sURI.substring(0,sURI.lastIndexOf(sPathInfo));

m_sContext = sURI.substring(0,sURI.lastIndexOf(sServletPath));
if(m_sContext.charAt(m_sContext.length()-1) == '/')
    m_sContext = m_sContext.substring(0, m_sContext.length()-1);

m_AdminCtrl = new AdminController(null);
UserLog[] m_aUserConnections = m_AdminCtrl.getUserConnected();

m_sAction = (String) request.getParameter("Action");

if (m_sAction != null)
{
	if (m_sAction.equals("resetAllFromProperties"))
	{
		SilverTrace.resetAll();
		m_sAction = null; // Reset all values -> act like there was the first display of this page
	}
	else if (m_sAction.equals("applyProperties"))
	{
		SilverTrace.applyProperties((String)request.getParameter("ApplyPropertiesFile"));
		m_sAction = null; // Reset all values -> act like there was the first display of this page
	}
}

if (m_sAction != null)
{
	sCurrentModule = (String) request.getParameter("Modules");
	if (request.getParameter("Appenders") != null)
		appenderSelected = Integer.parseInt(request.getParameter("Appenders"));
	appenderLayout = (String) request.getParameter("Layout");
	appenderType = Integer.parseInt(request.getParameter("AppenderType"));

	if (request.getParameter("consoleName") != null)
		appenderConsole = (String) request.getParameter("consoleName");
	if (request.getParameter("fileName") != null)
		appenderFile = (String) request.getParameter("fileName");
	if (request.getParameter("append") != null)
		appenderFileAppend = true;
	else
		appenderFileAppend = false;
	if (request.getParameter("rollingMode") != null)
		appenderRollingType = (String) request.getParameter("rollingMode");
	if (request.getParameter("mailHost") != null)
		appenderMailHost = (String) request.getParameter("mailHost");
	if (request.getParameter("mailFrom") != null)
		appenderMailFrom = (String) request.getParameter("mailFrom");
	if (request.getParameter("mailTo") != null)
		appenderMailTo = (String) request.getParameter("mailTo");
	if (request.getParameter("mailSubject") != null)
		appenderMailSubject = (String) request.getParameter("mailSubject");

	if (m_sAction.equals("changeTraceLevel"))
		SilverTrace.setTraceLevel(sCurrentModule,Integer.parseInt(request.getParameter("LvlTrace")));

	if (m_sAction.equals("addNewAppender"))
	{
		switch (appenderType)
		{
			case SilverTrace.APPENDER_CONSOLE :
				SilverTrace.addAppenderConsole(sCurrentModule, appenderLayout, appenderConsole);
				break;
			case SilverTrace.APPENDER_FILE :
				SilverTrace.addAppenderFile(sCurrentModule, appenderLayout, appenderFile, appenderFileAppend);
				break;
			case SilverTrace.APPENDER_ROLLING_FILE :
				SilverTrace.addAppenderRollingFile(sCurrentModule, appenderLayout, appenderFile, appenderRollingType);
				break;
			case SilverTrace.APPENDER_MAIL :
				SilverTrace.addAppenderMail(sCurrentModule, appenderLayout, appenderMailHost, appenderMailFrom, appenderMailTo, appenderMailSubject);
				break;
		}
		appenderSelected = appenderType;
	}
	if (m_sAction.equals("removeAppender"))
	{
		SilverTrace.removeAppender(sCurrentModule,appenderSelected);
		appenderSelected = 0;
	}
	if ((m_sAction.equals("removeAppender") == false) && (m_sAction.equals("addNewAppender") == false) && (m_sAction.equals("changeAppender") == false) && (m_sAction.equals("changeModule") == false))
	{
		haveToSetAppenderValues = false;
	}
	if (m_sAction.equals("resetDBConnections"))
	{
			m_AdminCtrl.resetAllDBConnections(false);
	}
	if (m_sAction.equals("resetResourceLocator"))
	{
		ResourceLocator.resetResourceLocator();
	}
}

if (haveToSetAppenderValues)
{
	Properties	appProps;
	int			appAvailable;

	appAvailable = SilverTrace.getAvailableAppenders(sCurrentModule);
	if ((appenderSelected == 0) || ((appenderSelected & appAvailable) != appenderSelected))
	{	// appender type no longer value, select another if possible...
		if ((SilverTrace.APPENDER_CONSOLE & appAvailable) == SilverTrace.APPENDER_CONSOLE)
			appenderSelected = SilverTrace.APPENDER_CONSOLE;
		else if ((SilverTrace.APPENDER_FILE & appAvailable) == SilverTrace.APPENDER_FILE)
			appenderSelected = SilverTrace.APPENDER_FILE;
		else if ((SilverTrace.APPENDER_ROLLING_FILE & appAvailable) == SilverTrace.APPENDER_ROLLING_FILE)
			appenderSelected = SilverTrace.APPENDER_ROLLING_FILE;
		else if ((SilverTrace.APPENDER_MAIL & appAvailable) == SilverTrace.APPENDER_MAIL)
			appenderSelected = SilverTrace.APPENDER_MAIL;
		else
			appenderSelected = 0;
	}
	if (appenderSelected != 0)
	{
		appenderType = appenderSelected;
		appProps = SilverTrace.getAppender(sCurrentModule,appenderType);
		appenderLayout = appProps.getProperty("Layout",appenderLayout);
		switch (appenderType)
		{
			case SilverTrace.APPENDER_CONSOLE :
				appenderConsole = appProps.getProperty("consoleName",appenderConsole);
				break;
			case SilverTrace.APPENDER_FILE :
				appenderFile = appProps.getProperty("fileName",appenderFile);
				if (appProps.getProperty("append","true").equals("true"))
					appenderFileAppend = true;
				else
					appenderFileAppend = false;
				break;
			case SilverTrace.APPENDER_ROLLING_FILE :
				appenderFile = appProps.getProperty("fileName",appenderFile);
				appenderRollingType = appProps.getProperty("rollingMode",appenderRollingType);
				break;
			case SilverTrace.APPENDER_MAIL :
				appenderMailHost = appProps.getProperty("mailHost",appenderMailHost);
				appenderMailFrom = appProps.getProperty("mailFrom",appenderMailFrom);
				appenderMailTo = appProps.getProperty("mailTo",appenderMailTo);
				appenderMailSubject = appProps.getProperty("mailSubject",appenderMailSubject);
				break;
		}
	}
}
%>

<html>
<head>
<title>Silver Trace Debug Page</title>
<link rel="stylesheet" href="<%=m_sContext%>/util/styleSheets/globalSP.css">

<script language="Javascript1.2">
function applyProperties()
{
	document.ExploitationForm.Action.value = "applyProperties";
	document.ExploitationForm.submit();
}

function changeModule()
{
	document.ExploitationForm.Action.value = "changeModule";
	document.ExploitationForm.submit();
}
function changeTraceLevel()
{
	document.ExploitationForm.Action.value = "changeTraceLevel";
	document.ExploitationForm.submit();
}
function changeAppenderType()
{
	document.ExploitationForm.Action.value = "changeAppenderType";
	document.ExploitationForm.submit();
}
function changeAppender()
{
	document.ExploitationForm.Action.value = "changeAppender";
	document.ExploitationForm.submit();
}
function addNewAppender()
{
	document.ExploitationForm.Action.value = "addNewAppender";
	document.ExploitationForm.submit();
}
function removeAppender()
{
	document.ExploitationForm.Action.value = "removeAppender";
	document.ExploitationForm.submit();
}
function resetDBConnections()
{
	document.ExploitationForm.Action.value = "resetDBConnections";
	document.ExploitationForm.submit();
}
function resetResourceLocator()
{
	document.ExploitationForm.Action.value = "resetResourceLocator";
	document.ExploitationForm.submit();
}
function displayTraces()
{
    window.open("<%=m_sContext%>/admin/jsp/DisplaySilverTrace.jsp?NbLinesToDisplay=" + document.ExploitationForm.NbLinesToDisplay.value, "TheSilvertracePopup");
}
function resetAllFromProperties()
{
	if (window.confirm("!!!Warning!!! This will reset ALL trace configurations (appenders and debug levels)."))
	{
		document.ExploitationForm.Action.value = "resetAllFromProperties";
		document.ExploitationForm.submit();
	}
}

</script>
</head>

<body bgcolor="#FFFFFF" leftmargin="5" topmargin="5" marginwidth="5" marginheight="5">

<CENTER>
<H1 class="intfdcolor3">Exploitation</H1>
<H2 class="intfdcolor3">Log setting</H2>
 <FORM NAME="ExploitationForm" ACTION="<%=m_sContext%>/admin/jsp/ExploitationSilverTrace.jsp" METHOD=POST >
  <BR><B>Number of lines to display from the end : </B><INPUT size=10 TYPE="text" NAME="NbLinesToDisplay" VALUE=1000>&nbsp;&nbsp;<INPUT TYPE="button" value="Display Traces" ONCLICK='javascript:displayTraces()'><BR><BR>
  <INPUT TYPE="hidden" NAME="Action">
  <INPUT TYPE="hidden" NAME="Level">
  <table width="100%" border="0" cellspacing="0" cellpadding="5">
	<TR>
      <TD width="250px">
		<B>Modules : </B>
	  </TD>
      <TD width="250px">
		<NOBR><B>Module's trace settings : </B></NOBR>
	  </TD>
      <TD width="*">
		<NOBR><B>Adding/Modifying appender : </B></NOBR>
	  </TD>
    </TR>
	<TR>
      <TD width="250px">
		<SELECT SIZE=20 NAME="Modules" ONCHANGE='javascript:changeModule()'>
<%
		Properties	traceModules = SilverTrace.getModuleList();
		Enumeration	traceEnumeration = traceModules.propertyNames();
		ArrayList	traceArrayList = new ArrayList();
		Iterator	traceModulesNames = null;
		String		traceModuleName = null;
		String		traceModulePath = null;
		String		traceModuleFull = null;

		while (traceEnumeration.hasMoreElements())
		{
			traceModuleName = traceEnumeration.nextElement().toString();
			traceModuleFull = traceModules.getProperty(traceModuleName) + "$$" + traceModuleName;
			traceArrayList.add(traceModuleFull);
		}
		Collections.sort(traceArrayList);
		traceModulesNames = traceArrayList.iterator();
		while (traceModulesNames.hasNext())
		{
			traceModuleFull = traceModulesNames.next().toString();
			traceModulePath = traceModuleFull.substring(0,traceModuleFull.lastIndexOf("$$"));
			traceModuleName = traceModuleFull.substring(traceModuleFull.lastIndexOf("$$")+2);
	        out.println("<option value=\"" + traceModuleName + "\"");
			if (sCurrentModule.compareToIgnoreCase(traceModuleName) == 0)
				out.println(" selected");
			out.println(">");
            if (SilverTrace.getAvailableAppenders(traceModuleName) != 0)
    			out.println("A | ");
            else
    			out.println("_ | ");
			switch (SilverTrace.getTraceLevel(traceModuleName,true))
			{
				case SilverTrace.TRACE_LEVEL_DEBUG :
					out.println("D ");
					break;
				case SilverTrace.TRACE_LEVEL_INFO :
					out.println("I ");
					break;
				case SilverTrace.TRACE_LEVEL_WARN :
					out.println("W ");
					break;
				case SilverTrace.TRACE_LEVEL_ERROR :
					out.println("E ");
					break;
				case SilverTrace.TRACE_LEVEL_FATAL :
					out.println("F ");
					break;
			}
            if (SilverTrace.getTraceLevel(traceModuleName,false) == SilverTrace.TRACE_LEVEL_UNKNOWN)
                out.println("_ | ");
            else
                out.println("* | ");
			out.println(traceModulePath + "</option>");
		}
%>
		</SELECT>
	  </TD>
      <TD valign=top>
		Trace Level :
		<SELECT NAME="LvlTrace" ONCHANGE='javascript:changeTraceLevel()'>
			<option value=<%=Integer.toString(SilverTrace.TRACE_LEVEL_UNKNOWN)%> <% if (SilverTrace.getTraceLevel(sCurrentModule,false) == SilverTrace.TRACE_LEVEL_UNKNOWN) out.println("selected"); %>>(Parent)</option>
			<option value=<%=Integer.toString(SilverTrace.TRACE_LEVEL_DEBUG)%> <% if (SilverTrace.getTraceLevel(sCurrentModule,false) == SilverTrace.TRACE_LEVEL_DEBUG) out.println("selected"); %>>Debug</option>
			<option value=<%=Integer.toString(SilverTrace.TRACE_LEVEL_INFO)%> <% if (SilverTrace.getTraceLevel(sCurrentModule,false) == SilverTrace.TRACE_LEVEL_INFO) out.println("selected"); %>>Info</option>
			<option value=<%=Integer.toString(SilverTrace.TRACE_LEVEL_WARN)%> <% if (SilverTrace.getTraceLevel(sCurrentModule,false) == SilverTrace.TRACE_LEVEL_WARN) out.println("selected"); %>>Warning</option>
			<option value=<%=Integer.toString(SilverTrace.TRACE_LEVEL_ERROR)%> <% if (SilverTrace.getTraceLevel(sCurrentModule,false) == SilverTrace.TRACE_LEVEL_ERROR) out.println("selected"); %>>Error</option>
			<option value=<%=Integer.toString(SilverTrace.TRACE_LEVEL_FATAL)%> <% if (SilverTrace.getTraceLevel(sCurrentModule,false) == SilverTrace.TRACE_LEVEL_FATAL) out.println("selected"); %>>Fatal</option>
		</SELECT>
		<BR><BR>
		Appenders : <BR>
		<SELECT SIZE=5 NAME="Appenders" ONCHANGE='javascript:changeAppender()'>
		<%
			out.println(addAppenderInList(sCurrentModule,SilverTrace.APPENDER_CONSOLE,appenderSelected));
			out.println(addAppenderInList(sCurrentModule,SilverTrace.APPENDER_FILE,appenderSelected));
			out.println(addAppenderInList(sCurrentModule,SilverTrace.APPENDER_ROLLING_FILE,appenderSelected));
			out.println(addAppenderInList(sCurrentModule,SilverTrace.APPENDER_MAIL,appenderSelected));
		%>
		</SELECT>
		<BR><BR>
		<INPUT TYPE="button" value="Remove appender" ONCLICK='javascript:removeAppender()'><br><br><br>
		<span class="titreModule">Properties file :</span><br>
	    <INPUT TYPE=TEXT NAME="ApplyPropertiesFile" SIZE="50%" VALUE="">
    	<INPUT TYPE="button" VALUE="Apply" onClick="javascript:applyProperties()"><BR><BR>
	    <INPUT TYPE="button" value="Reset ALL traces to default properties" SIZE="90%" ONCLICK='javascript:resetAllFromProperties()'><BR>
	  </TD>
      <TD valign=top>
	  <NOBR>
		Type :
		<SELECT NAME="AppenderType" ONCHANGE='javascript:changeAppenderType()'>
			<option value=<%=Integer.toString(SilverTrace.APPENDER_CONSOLE)%> <% if (appenderType == SilverTrace.APPENDER_CONSOLE) out.println("selected"); %>>Console</option>
			<option value=<%=Integer.toString(SilverTrace.APPENDER_FILE)%> <% if (appenderType == SilverTrace.APPENDER_FILE) out.println("selected"); %>>File</option>
			<option value=<%=Integer.toString(SilverTrace.APPENDER_ROLLING_FILE)%> <% if (appenderType == SilverTrace.APPENDER_ROLLING_FILE) out.println("selected"); %>>Rolling File</option>
			<option value=<%=Integer.toString(SilverTrace.APPENDER_MAIL)%> <% if (appenderType == SilverTrace.APPENDER_MAIL) out.println("selected"); %>>Mail</option>
		</SELECT>
		<BR><BR>
		Layout :
		<SELECT NAME="Layout">
			<option value="<%=SilverTrace.LAYOUT_HTML%>" <% if (appenderLayout.equals(SilverTrace.LAYOUT_HTML)) out.println("selected"); %>>HTML Page</option>
			<option value="<%=SilverTrace.LAYOUT_SHORT%>" <% if (appenderLayout.equals(SilverTrace.LAYOUT_SHORT)) out.println("selected"); %>>TEXT Short</option>
			<option value="<%=SilverTrace.LAYOUT_DETAILED%>" <% if (appenderLayout.equals(SilverTrace.LAYOUT_DETAILED)) out.println("selected"); %>>TEXT Detailed</option>
			<option value="<%=SilverTrace.LAYOUT_FULL_DEBUG%>" <% if (appenderLayout.equals(SilverTrace.LAYOUT_FULL_DEBUG)) out.println("selected"); %>>TEXT Full infos</option>
		</SELECT>
		<BR><BR>
<%	if (appenderType == SilverTrace.APPENDER_CONSOLE) { %>
		Console : <BR><INPUT TYPE="text" NAME="consoleName" SIZE=60 value="<%=appenderConsole%>"><BR><BR>
<%	}%>
<%	if (appenderType == SilverTrace.APPENDER_FILE) { %>
		File : <BR><INPUT TYPE="text" NAME="fileName" SIZE=60 value="<%=appenderFile%>"><BR><INPUT TYPE="checkbox" <% if (appenderFileAppend) out.println("checked"); %> NAME="append" value="true">Append<BR><BR>
<%	}%>
<%	if (appenderType == SilverTrace.APPENDER_ROLLING_FILE) { %>
		File : <BR><INPUT TYPE="text" NAME="fileName" SIZE=60 value="<%=appenderFile%>"><BR><BR>
		Rolling mode : <BR>
		<SELECT NAME="rollingMode">
			<option value="<%=SilverTrace.ROLLING_MODE_MOUNTH%>" <% if (appenderRollingType.equals(SilverTrace.ROLLING_MODE_MOUNTH)) out.println("selected"); %>>Every Mounth</option>
			<option value="<%=SilverTrace.ROLLING_MODE_WEEK%>" <% if (appenderRollingType.equals(SilverTrace.ROLLING_MODE_WEEK)) out.println("selected"); %>>Every Week</option>
			<option value="<%=SilverTrace.ROLLING_MODE_DAILY%>" <% if (appenderRollingType.equals(SilverTrace.ROLLING_MODE_DAILY)) out.println("selected"); %>>Every Day</option>
			<option value="<%=SilverTrace.ROLLING_MODE_HOUR%>" <% if (appenderRollingType.equals(SilverTrace.ROLLING_MODE_HOUR)) out.println("selected"); %>>Every Hour</option>
		</SELECT><BR><BR>
<%	}%>
<%	if (appenderType == SilverTrace.APPENDER_MAIL) { %>
		Mail Host    : <BR><INPUT TYPE="text" NAME="mailHost" SIZE=60 value="<%=appenderMailHost%>"><BR>
		Mail From    : <BR><INPUT TYPE="text" NAME="mailFrom" SIZE=60 value="<%=appenderMailFrom%>"><BR>
		Mail To      : <BR><INPUT TYPE="text" NAME="mailTo" SIZE=60 value="<%=appenderMailTo%>"><BR>
		Mail Subject : <BR><INPUT TYPE="text" NAME="mailSubject" SIZE=60 value="<%=appenderMailSubject%>"><BR><BR>
<%	}%>
		<INPUT TYPE="button" value="Add new appender" ONCLICK='javascript:addNewAppender()'>
	  </NOBR>
	  </TD>
    </TR>
  </TABLE>
<br>
<center><H2 class="intfdcolor3">Reset Resource Locator...</H2></center>
  <table width="100%" border="0" cellspacing="0" cellpadding="5">
    <TR>
      <TD align="center"><INPUT TYPE="button" VALUE="Apply" onClick="javascript:resetResourceLocator()"></TD>
    </TR>
  </TABLE>

<br>
<center><H2 class="intfdcolor3">Reset DB Connections....</H2></center>
  <table width="100%" border="0" cellspacing="0" cellpadding="5">
    <TR>
      <TD align="center"><INPUT TYPE="button" VALUE="Apply" onClick="javascript:resetDBConnections()"></TD>
    </TR>
  </TABLE>

<br>
<center><H2 class="intfdcolor3">Users logged</H2></center>
  <table width="800" border="0" cellspacing="0" cellpadding="5">
    <TR>
      <TD>NB</TD>
      <TD>User Id</TD>
      <TD>Session Id</TD>
      <TD>Creation Date</TD>
    </TR>
<%
    for(int nI=0; nI < m_aUserConnections.length; nI++)
    { %>
        <TR>
          <TD><%=nI%></TD>
          <TD><%=m_aUserConnections[nI].getUserId()%></TD>
          <TD><%=m_aUserConnections[nI].getSessionId()%></TD>
          <TD><%=m_Formatter.format(m_aUserConnections[nI].getLogDate())%></TD>
        </TR>
<%    }  %>
  </TABLE>

</FORM>
</CENTER>
</body>
</html>